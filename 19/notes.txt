#ip 4        ip=0 [1, 0, 0, 0, 0, 0, 0]
addi 4 16 4  ip=0 [1, 0, 0, 0, 16, 0, 0] ip=17 # jump relatively 16
seti 1 8 1
seti 1 3 5
mulr 1 5 3
eqrr 3 2 3 -> 0
addr 3 4 4 # jump relatively reg[3]
addi 4 1 4 # jump relatively 1
addr 1 0 0
addi 5 1 5
gtrr 5 2 3
addr 4 3 4  jump relatively reg[3]
seti 2 2 4  # jump to ip=3 
addi 1 1 1
gtrr 1 2 3
addr 3 4 4  jump relatively reg[3]
seti 1 4 4  # jump to ip=2
mulr 4 4 4 
addi 2 2 2  ip=17 [1, 0, 2, 0, 17, 0] ip=18  reg[2] += 2
mulr 2 2 2  ip=18 [1, 0, 2ˆ2, 0, 18, 0] ip=19
mulr 4 2 2  ip=19 [1, 0, 18*2ˆ2, 0, 19, 0] ip=20
muli 2 11 2 ip=20 [1, 0, 18*2ˆ2*11, 0, 20, 0] ip=21
addi 3 6 3  ip=21 [1, 0 836, 6, 22, 0] ip=22
mulr 3 4 3  ip=22 [1, 0, 836, 132, 22, 0] ip=23
addi 3 8 3  ip=23 
addr 2 3 2  
addr 4 0 4  # jump the amount in reg[0] relatively
seti 0 1 4  # jump to ip=1
setr 4 4 3  reg[3] = ip
mulr 3 4 3  reg[3] = ip * (ip+1)
addr 4 3 3  reg[3] = ip*ip + 2ip
mulr 4 3 3  reg[3] = (ip*ip + 2ip)*(ip+1)
muli 3 14 3 reg[3] = reg[3] * 14
mulr 3 4 3  reg[3] = reg[3] * ip
addr 2 3 2  reg[2] += reg[3]
seti 0 4 0  reg[0] = 0
seti 0 7 4 # jump to the amount in reg[0]+1

"""
reg[0] = 1
reg[1..5] = 0
ip = 0

ip = ip + 16
ip += 1

reg[2] += 2
ip += 1
reg[2] *= reg[2]
ip += 1
reg[2] *= ip
ip += 1
reg[2] *= 11
ip += 1
reg[3] += 6
ip += 1
reg[3] *= ip
ip += 1
reg[3] += 6
ip =+ 1
reg[3] *= reg[2]
ip += 1
-> ip += 1
reg[3] = ip
ip += 1
reg[3] *= ip
ip += 1
reg[3] += ip
ip += 1
reg[3] *= ip
ip += 1
reg[3] *= 14
ip += 1
reg[3] *= ip
ip += 1
reg[2] += reg[3]
reg[0] = 0
ip += 1
ip = 0   [0, 0, 10551376, 10550400, 0, 0]
ip += 1

reg[1] = 1
reg[5] = 1
reg[3] = reg[1] * reg[5]
reg[3] = reg[3] == reg[2] -> 0 False
reg[4] += reg[3] 
reg[4] += 1

=============
<0, 11> 
reg[0] = 0
reg[1] = 1
reg[2] = 10551376
reg[3] = 10550400
reg[4] = ip
reg[5] = 1

while reg[5] <= reg[2]:
    reg[3] = reg[1] * reg[5]
    if reg[3] == reg[2]:
        reg[0] += 1
    reg[5] += 1

reg[0] = 1
reg[1] = 1
reg[3] = 10551376
reg[4] = ip
reg[5] = 10551371
=========

===========
<12, ...>

reg[0] = 1
reg[1] = 1
reg[2] = 10551376
reg[3] = 1
reg[4] = ip
reg[5] = 1

while reg[1] < reg[2]:
    reg[5] = 1
    while reg[5] <= reg[2]:
        reg[3] = reg[1] * reg[5]
        if reg[3] == reg[2]:
            reg[0] += 1
        reg[5] += 1

====



reg[5] += 1 
reg[3] = reg[5] > reg[2] -> 0 False
ip += reg[3] = 0
ip = 3

[0, 1, 10551376, 13, 3, 13]
reg[5] loops until reg[5] == 10551377

[0, 1, 10551376, 1, ip, 10551377]
jump loop then
addi 1 1 1
reg[1] += 1
[0, 2, 10551376, 1, ip, 10551377]

gtrr 1 2 3
reg[3] = reg[1] > reg[2] -> 0 False

[0, 10551377, 10551376, 1, ip, 10551377]
ip = 

"""